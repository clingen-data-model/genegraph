name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - master

jobs:
  dockerlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: hadolint/hadolint-action@v1.5.0
        with:
          dockerfile: Dockerfile

  # clojurelint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: DeLaGuardo/clojure-lint-action@2d6013175031096ae07bc9b90a07173029ad7dc9
  #       with:
  #         clj-kondo-args: --lint src
  #         github_token: ${{ secrets.GITHUB_TOKEN }}

  # cljfmt:
  #   runs-on: ubuntu-latest
  #   needs: clojurelint
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-java@v3
  #       with:
  #         distribution: 'temurin'
  #         java-version: '17'
  #     - name: Install clojure tools
  #       uses: DeLaGuardo/setup-clojure@5.0
  #       with:
  #         cli: 1.11.1.1113
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
  #     - name: cljfmt check
  #       run: |
  #         clojure -Sdeps '{:deps {cljfmt {:mvn/version "0.8.0"}}}' -m cljfmt.main check

  cljbuild:
    runs-on: ubuntu-latest
    # needs: [clojurelint, cljfmt]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@5.0
        with:
          cli: 1.11.1.1113
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: clojure deps
        run: clojure -P
      # - name: Run tests
      #   run: clojure -M:test
      - name: compile
        run: clojure -T:build uber
